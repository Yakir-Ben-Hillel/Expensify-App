{"version":3,"sources":["components/AppBarComponents/useStyles.tsx","components/AppBarComponents/Drawer.tsx","database/firebase.js","redux/actions/auth.ts","components/AppBarComponents/RenderMenu.tsx","components/AppBarComponents/RenderMobileMenu.tsx","components/AppBar.tsx","redux/actions/expensesActions.ts","redux/actions/snackBarActions.ts","components/FormComponents/AmountComponent.tsx","components/ExpenseFormFnc.tsx","components/FormComponents/DateComponent.tsx","components/FormComponents/DescriptionComponent.tsx","components/FormComponents/NoteComponent.tsx","components/SnackBars/snackBarsConfigures.ts","components/SnackBars/snackBarContentWrapper.tsx","components/SnackBars/errorBar.tsx","components/expenseTable.tsx","components/SnackBars/AddExpenseBar.tsx","components/ExpenseDashboardPage.tsx","components/HelpPage.tsx","components/loginPage.tsx","components/NotFoundPage.tsx","routers/AppRouter.tsx","redux/reducers/expensesReduce.ts","redux/reducers/filtersReducer.ts","redux/reducers/snackBarReduce.ts","redux/reducers/authReducer.ts","index.js","redux/store/configureStore.ts"],"names":["useStyles","makeStyles","theme","createStyles","root","display","grow","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","height","pointerEvents","inputRoot","color","inputInput","sectionDesktop","sectionMobile","content","contentShift","DrawerHandler","open","handleDrawerClose","classes","Drawer","className","variant","anchor","paper","IconButton","onClick","Divider","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","googleAuthProvider","auth","GoogleAuthProvider","startLogout","console","log","signOut","mapDispatchToProps","connect","anchorEl","menuId","handleMenuClose","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","onClose","MenuItem","renderMobileMenu","mobileMoreAnchorEl","isMobileMenuOpen","mobileMenuId","handleMobileMenuClose","handleProfileMenuOpen","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","setOpen","React","useState","setAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","event","currentTarget","AppBar","clsx","Toolbar","edge","Typography","noWrap","RenderMobileMenu","RenderMenu","startSetExpenses","dispatch","getState","uid","authentication","ref","once","then","Snapshot","expenses","forEach","childrenSnapShot","push","key","val","type","setExpenses","setSnackBarStatus","snackBarStatus","Amount","amount","onAmountChange","touch","SetTouch","userInsertedInput","SetUserInsertedInput","error","FormControl","TextField","margin","label","required","value","onChange","onChangeCapture","onFocus","helperText","InputProps","startAdornment","InputAdornment","endAdornment","withStyles","marginTop","input","background","border","fontSize","fontFamily","join","borderColor","boxShadow","InputBase","flexWrap","formControl","extendedIcon","textField","overflowWrap","flexBasis","DatePicker","createdAt","onDateChange","ExpenseFnc","MuiPickersUtilsProvider","utils","DataFnsUtils","format","KeyboardButtonProps","Description","description","onDescriptionChange","Note","note","onNoteChange","placeholder","multiline","rowsMax","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","green","dark","main","amber","icon","iconVariant","opacity","message","state","snackBar","props","snackBarConfigures","Icon","SnackbarContent","aria-describedby","action","isOpenAddExpense","isOpenError","Snackbar","autoHideDuration","TransitionComponent","Transition","massage","startEditExpense","updates","update","editExpense","startRemoveExpense","remove","removeExpense","startAddExpense","expenseData","expense","Date","toDateString","place","addExpense","whichErrorMassageToDisplay","selectedRow","SetSelectedRow","SetMassage","columns","field","cellStyle","wordBreak","wordWrap","editComponent","e","target","match","DateComponent","maxWidth","data","onRowClick","options","rowStyle","rowData","tableData","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","onRowAdd","onRowDelete","flexDirection","useEffect","SetIsMounted","isMounted","CircularProgress","size","HelpPage","Copyright","align","getFullYear","body","avatar","secondary","form","submit","startLogin","signInWithPopup","Container","CssBaseline","Avatar","fullWidth","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","href","Box","mt","NotFoundPage","history","createHistory","isAuthenticated","path","ExpenseDashboardPage","Login","exact","expensesReducerDefaultState","expensesReducer","undefined","arrayBeforeAddedExpense","slice","arrayAfterAddedExpense","filter","map","filtersReducerDefaultState","text","sortBy","startDate","endDate","filtersReducer","snackBarReducerDefaultState","Fade","snackBarReducer","store","createStore","combineReducers","filters","authReducer","composeWithDevTools","applyMiddleware","thunk","Application","hasRendered","renderApp","ReactDOM","render","document","getElementById","onAuthStateChanged","user","location","pathname"],"mappings":"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","file":"static/js/main.e4424f62.chunk.js","sourcesContent":["import {\n  createStyles,\n  fade,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles';\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex'\n    },\n    grow: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block'\n      }\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    hide: {\n      display: 'none'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end'\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto'\n      }\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit'\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200\n      }\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex'\n      }\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none'\n      }\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      marginLeft: 0\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginLeft: drawerWidth\n    }\n  })\n);\nexport default useStyles;\n","import Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddIcon from '@material-ui/icons/Add';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport EditIcon from '@material-ui/icons/Edit';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport HomeIcon from '@material-ui/icons/Home';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport useStyles from './useStyles';\n\ninterface IDrawer {\n  open: boolean;\n  handleDrawerClose(): void;\n}\nconst DrawerHandler: React.FC<IDrawer> = ({ open, handleDrawerClose }) => {\n  const classes = useStyles();\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant='persistent'\n      anchor='left'\n      open={open}\n      classes={{\n        paper: classes.drawerPaper\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <ListItem button component={Link} to={'/dashboard'}>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText primary='Home' />\n        </ListItem>\n        <ListItem button component={Link} to={'/create'}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText primary='Add Expense' />\n        </ListItem>\n        <ListItem button component={Link} to={'/edit'}>\n          <ListItemIcon>\n            <EditIcon />\n          </ListItemIcon>\n          <ListItemText primary='Edit Expense' />\n        </ListItem>\n        <ListItem button component={Link} to={'/help'}>\n          <ListItemIcon>\n            <HelpOutlineIcon />\n          </ListItemIcon>\n          <ListItemText primary='Help' />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\nexport default DrawerHandler;\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAVonlw8QdTL2dUHQHQXd3GvHPvHy2Sn1A',\n  authDomain: 'expensify-app-ec00d.firebaseapp.com',\n  databaseURL: 'https://expensify-app-ec00d.firebaseio.com',\n  projectId: 'expensify-app-ec00d',\n  storageBucket: '',\n  messagingSenderId: '959835198480',\n  appId: '1:959835198480:web:ac9a2d855577c1ee662695'\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst database = firebase.database();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nexport { firebase, googleAuthProvider, database as default };\n","import { firebase, googleAuthProvider } from '../../database/firebase';\nimport { Login, Logout } from '../@types/types';\n\nexport const login = (uid: string): Login => {\n  return {\n    type: 'LOGIN',\n    uid\n  };\n};\nexport const logout = (): Logout => {\n  return {\n    type: 'LOGOUT'\n  };\n};\nexport const startLogin = () => {\n  return () => {\n    return firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n};\nexport const startLogout = () => {\n  return () => {\n    console.log('i logged out');\n    return firebase.auth().signOut();\n  };\n};\n","import Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startLogout } from '../../redux/actions/auth';\n\ninterface IMenu {\n  anchorEl: HTMLElement | null;\n  open: boolean;\n  menuId: string;\n  handleMenuClose(): void;\n  startLogout: () => Promise<void>;\n}\nconst renderMenu: React.FC<IMenu> = ({\n  anchorEl,\n  open,\n  menuId,\n  handleMenuClose,\n  startLogout\n}) => (\n  <Menu\n    anchorEl={anchorEl}\n    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n    id={menuId}\n    keepMounted\n    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n    open={open}\n    onClose={handleMenuClose}\n  >\n    <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n    <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    <MenuItem onClick={() => startLogout() && handleMenuClose}>Logout</MenuItem>\n  </Menu>\n);\nconst mapDispatchToProps = {\n  startLogout\n};\nexport default connect(\n  null,\n  mapDispatchToProps\n)(renderMenu);\n","import Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport React from 'react';\ninterface IMobileMenu {\n  mobileMoreAnchorEl: HTMLElement | null;\n  isMobileMenuOpen: boolean;\n  mobileMenuId:string;\n  handleMobileMenuClose(): void;\n  handleProfileMenuOpen(event: React.MouseEvent<HTMLElement, MouseEvent>): void;\n}\nconst renderMobileMenu: React.FC<IMobileMenu> = ({\n  mobileMoreAnchorEl,\n  isMobileMenuOpen,\n  mobileMenuId,\n  handleMobileMenuClose,\n  handleProfileMenuOpen\n}) => (\n  <Menu\n    anchorEl={mobileMoreAnchorEl}\n    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n    id={mobileMenuId}\n    keepMounted\n    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n    open={isMobileMenuOpen}\n    onClose={handleMobileMenuClose}\n  >\n    <MenuItem>\n      <IconButton aria-label='show 1 new mails' color='inherit'>\n        <Badge badgeContent={1} color='secondary'>\n          <MailIcon />\n        </Badge>\n      </IconButton>\n      <p>Messages</p>\n    </MenuItem>\n    <MenuItem>\n      <IconButton aria-label='show 10 new notifications' color='inherit'>\n        <Badge badgeContent={10} color='secondary'>\n          <NotificationsIcon />\n        </Badge>\n      </IconButton>\n      <p>Notifications</p>\n    </MenuItem>\n    <MenuItem onClick={handleProfileMenuOpen}>\n      <IconButton\n        aria-label='account of current user'\n        aria-controls='primary-search-account-menu'\n        aria-haspopup='true'\n        color='inherit'\n      >\n        <AccountCircle />\n      </IconButton>\n      <p>Profile</p>\n    </MenuItem>\n  </Menu>\n);\nexport default renderMobileMenu;\n","import AppBar from '@material-ui/core/AppBar';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\n//import InputBase from '@material-ui/core/InputBase';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n//import SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport React from 'react';\nimport DrawerHandler from './AppBarComponents/Drawer';\nimport RenderMenuDesktop from './AppBarComponents/RenderMenu';\nimport RenderMobileMenu from './AppBarComponents/RenderMobileMenu';\nimport useStyles from './AppBarComponents/useStyles';\nimport { connect } from 'react-redux';\nimport { startLogout } from '../redux/actions/auth';\n\ninterface IBar {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  startLogout: () => Promise<void>;\n}\nconst Bar: React.FC<IBar> = ({ open, setOpen, startLogout }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [\n    mobileMoreAnchorEl,\n    setMobileMoreAnchorEl\n  ] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const menuId = 'primary-search-account-menu';\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMenu = () => (\n    <RenderMenuDesktop\n      anchorEl={anchorEl}\n      open={isMenuOpen}\n      handleMenuClose={handleMenuClose}\n      menuId={menuId}\n    />\n  );\n  const renderMobileMenu = () =>\n    RenderMobileMenu({\n      mobileMoreAnchorEl,\n      isMobileMenuOpen,\n      mobileMenuId,\n      handleMobileMenuClose,\n      handleProfileMenuOpen\n    });\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  function handleProfileMenuOpen(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handleMobileMenuOpen(event: React.MouseEvent<HTMLElement>) {\n    setMobileMoreAnchorEl(event.currentTarget);\n  }\n  return (\n    <div>\n      <AppBar\n        className={clsx(classes.appBar, { [classes.appBarShift]: open })}\n        position='static'\n      >\n        <Toolbar>\n          <IconButton\n            edge='start'\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.hide)}\n            color='inherit'\n            aria-label='open drawer'\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant='h6' noWrap>\n            Expensify App\n          </Typography>\n          {/* <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder='Search…'\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div> */}\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label='show 4 new mails' color='inherit'>\n              <Badge badgeContent={0} color='secondary'>\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label='show 17 new notifications' color='inherit'>\n              <Badge badgeContent={0} color='secondary'>\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge='end'\n              aria-label='account of current user'\n              aria-controls={menuId}\n              aria-haspopup='true'\n              onClick={handleProfileMenuOpen}\n              color='inherit'\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label='show more'\n              aria-controls={mobileMenuId}\n              aria-haspopup='true'\n              onClick={handleMobileMenuOpen}\n              color='inherit'\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n        <DrawerHandler open={open} handleDrawerClose={handleDrawerClose} />\n      </AppBar>\n      {renderMobileMenu()}\n      {renderMenu()}\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  startLogout\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Bar);\n","import { IExpense, AppState } from '../@types/state-interfaces';\nimport {\n  RemoveExpenseAction,\n  EditExpenseAction,\n  AddExpenseAction,\n  SetExpensesAction\n} from '../@types/types';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport database from '../../database/firebase';\n//Add Expense\nexport const addExpense = (\n  expense: IExpense,\n  place?: number\n): AddExpenseAction => {\n  return {\n    type: 'ADD_EXPENSE',\n    expense,\n    place\n  };\n};\nexport const startAddExpense = (expenseData: {\n  description: string;\n  note?: string;\n  amount: number;\n  createdAt?: string;\n}) => {\n  return (\n    dispatch: ThunkDispatch<{}, {}, AnyAction>,\n    getState: () => AppState\n  ) => {\n    const uid = getState().authentication.uid;\n    const {\n      description = '',\n      note = '',\n      amount = 0,\n      createdAt = new Date().toDateString()\n    } = expenseData;\n    const expense = {\n      description,\n      note,\n      amount,\n      createdAt\n    };\n    database\n      .ref(`users/${uid}/expenses`)\n      .push(expense)\n      .then(ref => {\n        dispatch(\n          addExpense({\n            id: ref.key,\n            ...expense\n          })\n        );\n      });\n  };\n};\nexport const removeExpense = (id: IExpense['id']): RemoveExpenseAction => {\n  return {\n    type: 'REMOVE_EXPENSE',\n    id\n  };\n};\nexport const startRemoveExpense = (id: IExpense['id']) => {\n  return (\n    dispatch: ThunkDispatch<{}, {}, AnyAction>,\n    getState: () => AppState\n  ) => {\n    const uid = getState().authentication.uid;\n    database\n      .ref(`users/${uid}/expenses/${id}`)\n      .remove()\n      .then(() => {\n        dispatch(removeExpense(id));\n      });\n  };\n};\n// EDIT_EXPENSE\nexport const editExpense = (\n  id: IExpense['id'],\n  updates: {\n    id?: string;\n    description?: string;\n    note?: string;\n    amount?: number;\n    createdAt?: string;\n  }\n): EditExpenseAction => ({\n  type: 'EDIT_EXPENSE',\n  id,\n  updates\n});\nexport const startEditExpense = (\n  id: IExpense['id'],\n  updates: {\n    id?: string;\n    description?: string;\n    note?: string;\n    amount?: number;\n    createdAt?: string;\n  }\n) => {\n  return (\n    dispatch: ThunkDispatch<{}, {}, AnyAction>,\n    getState: () => AppState\n  ) => {\n    const uid = getState().authentication.uid;\n    database\n      .ref(`users/${uid}/expenses/${id}`)\n      .update(updates)\n      .then(() => {\n        dispatch(editExpense(id, updates));\n      });\n  };\n};\nexport const setExpenses = (expenses: IExpense[]): SetExpensesAction => ({\n  type: 'SET_EXPENSES',\n  expenses\n});\nexport const startSetExpenses = () => {\n  return (\n    dispatch: ThunkDispatch<{}, {}, AnyAction>,\n    getState: () => AppState\n  ) => {\n    const uid = getState().authentication.uid;\n    database\n      .ref(`users/${uid}/expenses`)\n      .once('value')\n      .then(Snapshot => {\n        const expenses: IExpense[] = [];\n        Snapshot.forEach(childrenSnapShot => {\n          expenses.push({\n            id: childrenSnapShot.key,\n            ...childrenSnapShot.val()\n          });\n        });\n        dispatch(setExpenses(expenses));\n        console.log('i just finished up setting the expenses array.');\n      });\n  };\n};\n","import { ISnackBar } from '../@types/state-interfaces';\nimport { SetSnackBarStatus } from '../@types/types';\nexport const setSnackBarStatus = (\n  snackBarStatus: ISnackBar\n): SetSnackBarStatus => {\n  return {\n    type: 'SET_SNACK_BAR_STATUS',\n    snackBarStatus\n  };\n};\n","import FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport React from 'react';\ninterface IAmount {\n  amount: string;\n  onAmountChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\nconst Amount: React.FC<IAmount> = ({ amount, onAmountChange }) => {\n  const [touch, SetTouch] = React.useState(false);\n  const [userInsertedInput, SetUserInsertedInput] = React.useState(false);\n  const error = amount === '' && touch && userInsertedInput;\n  return (\n    <div>\n      <FormControl>\n        <TextField\n          margin='dense'\n          id='filled-adornment-amount'\n          //variant='filled'\n          label='Amount'\n          required\n          value={amount || ''}\n          onChange={onAmountChange}\n          onChangeCapture={() => {\n            SetUserInsertedInput(true);\n          }}\n          error={error}\n          onFocus={() => {\n            SetTouch(true);\n          }}\n          helperText={error ? 'Amount is empty!' : ''}\n          InputProps={{\n            startAdornment: <InputAdornment position='start'>$</InputAdornment>,\n            endAdornment: error && (\n              <InputAdornment position='end'>\n                <ErrorIcon color='secondary' />\n              </InputAdornment>\n            )\n            // inputComponent: ExpenseFnc.NumberFormatCustom as any\n          }}\n        />{' '}\n      </FormControl>\n    </div>\n  );\n};\nexport default Amount;\n","import InputBase from '@material-ui/core/InputBase';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles\n} from '@material-ui/core/styles';\nimport React from 'react';\nimport NumberFormat from 'react-number-format';\n\n// eslint-disable-next-line\n\nexport function NumberFormatCustom(props: NumberFormatCustomProps) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value\n          }\n        });\n      }}\n      thousandSeparator\n    />\n  );\n}\n\nexport const BootstrapInput = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3)\n      }\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"'\n      ].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n      }\n    }\n  })\n)(InputBase);\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing(1)\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1)\n    },\n    textField: {\n      overflowWrap: 'break-word',\n      flexBasis: 100\n    }\n  })\n);\n\n//import {IExpense} from '../redux/interfaces/state-interfaces'\nexport interface NumberFormatCustomProps {\n  inputRef: (instance: NumberFormat | null) => void;\n  onChange: (event: { target: { value: string } }) => void;\n}\n\nexport interface State {\n  description: string;\n  note: string;\n  amount: number;\n  createdAt: string;\n}\n","import DataFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\nimport React from 'react';\nimport * as ExpenseFnc from '../ExpenseFormFnc';\n\ninterface IDatePicker {\n  createdAt: MaterialUiPickersDate;\n  onDateChange: (createdAt: MaterialUiPickersDate) => void;\n}\nconst DatePicker: React.FC<IDatePicker> = ({ createdAt, onDateChange }) => {\n  const classes = ExpenseFnc.useStyles();\n  return (\n    <div>\n      <MuiPickersUtilsProvider utils={DataFnsUtils}>\n        <KeyboardDatePicker\n          className={classes.root}\n          margin='dense'\n          id='date-picker-dialog'\n          label='date-picker-dialog'\n          format='dd/MM/yyyy'\n          value={createdAt}\n          onChange={onDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n        />\n      </MuiPickersUtilsProvider>\n    </div>\n  );\n};\nexport default DatePicker;\n","import { InputAdornment, TextField } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport React from 'react';\n\ninterface IDescription {\n  description: string;\n  onDescriptionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\nconst Description: React.FC<IDescription> = ({\n  description = '',\n  onDescriptionChange\n}) => {\n  const [touch, SetTouch] = React.useState(false);\n  const [userInsertedInput, SetUserInsertedInput] = React.useState(false);\n  const error = description === '' && touch && userInsertedInput;\n  return (\n    <div>\n      <FormControl>\n        <TextField\n          id='filled-adornment-description'\n          margin='dense'\n          required\n          label='Description'\n          error={error}\n          onFocus={() => SetTouch(true)}\n          helperText={error ? 'Description is empty!' : ''}\n          value={description}\n          onChange={onDescriptionChange}\n          onChangeCapture={() => {\n            SetUserInsertedInput(true);\n          }}\n          InputProps={{\n            endAdornment: error && (\n              <InputAdornment position='end'>\n                <ErrorIcon color='secondary' />\n              </InputAdornment>\n            )\n          }}\n        />\n      </FormControl>\n    </div>\n  );\n};\nexport default Description;\n","import TextField from '@material-ui/core/TextField';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useStyles } from '../ExpenseFormFnc';\ninterface INote {\n  note: string;\n  onNoteChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n}\nconst Note: React.FC<INote> = ({ note, onNoteChange }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <TextField\n        id='filled-adornment-multiline-flexible'\n        placeholder='Add your note here...'\n        label='Note'\n        multiline\n        rowsMax='4'\n        value={note}\n        onChange={onNoteChange}\n        className={clsx(classes.textField, classes.root)}\n        margin='dense'\n      />{' '}\n    </div>\n  );\n};\nexport default Note;\n","import { ISnackBar } from \"../../redux/@types/state-interfaces\";\nimport { SetSnackBarStatus } from \"../../redux/@types/types\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { amber, green } from '@material-ui/core/colors';\n\nexport const variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon\n  };\n  \n  export const useStyles = makeStyles((theme: Theme) => ({\n    success: {\n      backgroundColor: green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1)\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }));\n  \n  export interface IProps {\n    setSnackBarStatus(snackBarStatus: ISnackBar): SetSnackBarStatus;\n    snackBar: ISnackBar;\n    variant: keyof typeof variantIcon;\n    massage: string;\n  }\n  ","import IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CloseIcon from '@material-ui/icons/Close';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState, ISnackBar } from '../../redux/@types/state-interfaces';\nimport { SetSnackBarStatus } from '../../redux/@types/types';\nimport { setSnackBarStatus } from '../../redux/actions/snackBarActions';\nimport * as snackBarConfigures from './snackBarsConfigures';\n\nexport interface Props {\n  className?: string;\n  message?: string;\n  variant: keyof typeof snackBarConfigures.variantIcon;\n  setSnackBarStatus(snackBarStatus: ISnackBar): SetSnackBarStatus;\n  snackBar: ISnackBar;\n}\n\nconst MySnackbarContentWrapper: React.FC<Props> = props => {\n  const classes = snackBarConfigures.useStyles();\n  const Icon = snackBarConfigures.variantIcon[props.variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[props.variant])}\n      aria-describedby='client-snackbar'\n      message={\n        <span id='client-snackbar' className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {props.message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key='close'\n          aria-label='close'\n          color='inherit'\n          onClick={() =>\n            props.setSnackBarStatus({\n              ...props.snackBar,\n              isOpenAddExpense: false,\n              isOpenError: false\n            })\n          }\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n    />\n  );\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    snackBar: state.snackBar\n  };\n};\nconst mapDispatchToProps = {\n  setSnackBarStatus\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MySnackbarContentWrapper);\n","import Snackbar from '@material-ui/core/Snackbar';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../redux/@types/state-interfaces';\nimport { setSnackBarStatus } from '../../redux/actions/snackBarActions';\nimport MySnackbarContentWrapper from './snackBarContentWrapper';\nimport * as snackBarConfigures from './snackBarsConfigures';\nconst ErrorBar: React.FC<snackBarConfigures.IProps> = props => {\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }}\n      open={props.snackBar.isOpenError}\n      autoHideDuration={5000}\n      TransitionComponent={props.snackBar.Transition}\n      onClose={() =>\n        props.setSnackBarStatus({\n          ...props.snackBar,\n          isOpenError: false\n        })\n      }\n    >\n      <MySnackbarContentWrapper\n        variant={props.variant}\n        message={props.massage}\n      />\n    </Snackbar>\n  );\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    snackBar: state.snackBar\n  };\n};\nconst mapDispatchToProps = {\n  setSnackBarStatus\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ErrorBar);\n","import { MaterialUiPickersDate } from '@material-ui/pickers';\nimport MaterialTable from 'material-table';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState, ISnackBar, Row } from '../redux/@types/state-interfaces';\nimport { SetSnackBarStatus } from '../redux/@types/types';\nimport {\n  startAddExpense,\n  startEditExpense,\n  startRemoveExpense,\n  startSetExpenses\n} from '../redux/actions/expensesActions';\nimport { setSnackBarStatus } from '../redux/actions/snackBarActions';\nimport Amount from './FormComponents/AmountComponent';\nimport DateComponent from './FormComponents/DateComponent';\nimport Description from './FormComponents/DescriptionComponent';\nimport Note from './FormComponents/NoteComponent';\nimport ErrorSnackBar from './SnackBars/errorBar';\ninterface IProps {\n  expenses: Row[];\n  startEditExpense: (\n    id: string,\n    update: {\n      id?: string;\n      description?: string;\n      amount?: number;\n      createdAt?: string;\n      note?: string;\n    }\n  ) => void;\n  startRemoveExpense: (id: string) => void;\n  startSetExpenses: () => void;\n  startAddExpense: (expenseData: {\n    description: string;\n    note?: string;\n    amount: number;\n    createdAt?: string;\n  }) => void;\n  setSnackBarStatus: (snackBarStatus: ISnackBar) => SetSnackBarStatus;\n}\n\nexport const ExpenseList: React.FC<IProps> = props => {\n  function whichErrorMassageToDisplay(\n    description: string,\n    amount: number\n  ): string {\n    if (!description && !amount) return 'Description and Amount are required!';\n    else if (!description && amount) return 'Description is required!';\n    else return 'Amount is required!';\n  }\n  const [selectedRow, SetSelectedRow] = React.useState();\n  const [massage, SetMassage] = React.useState('');\n  return (\n    <div>\n      <MaterialTable\n        title='Expenses List'\n        columns={[\n          {\n            title: 'Description',\n            field: 'description',\n            cellStyle: {\n              wordBreak: 'break-word',\n              wordWrap: 'break-word'\n            },\n            editComponent: props => (\n              <Description\n                description={props.value}\n                onDescriptionChange={e => {\n                  props.onChange(e.target.value);\n                }}\n              />\n            )\n          },\n          {\n            title: 'Amount',\n            field: 'amount',\n            editComponent: props => (\n              <Amount\n                amount={props.value}\n                onAmountChange={e => {\n                  const amount = e.target.value;\n                  if (amount.match(/^\\d{1,}(\\.\\d{0,2})?$/) || amount === '') {\n                    props.onChange(amount);\n                  }\n                }}\n              />\n            )\n          },\n          {\n            title: 'CreatedAt',\n            field: 'createdAt',\n            editComponent: props => (\n              <DateComponent\n                createdAt={props.value}\n                onDateChange={(createdAt: MaterialUiPickersDate) => {\n                  if (createdAt) {\n                    props.onChange(createdAt.toDateString());\n                  }\n                }}\n              />\n            )\n          },\n\n          {\n            title: 'Note',\n            field: 'note',\n            editComponent: props => (\n              <Note\n                note={props.value}\n                onNoteChange={e => {\n                  props.onChange(e.target.value);\n                }}\n              />\n            ),\n            cellStyle: {\n              wordBreak: 'break-word',\n              wordWrap: 'break-word',\n              maxWidth: '220px'\n            }\n          }\n        ]}\n        data={props.expenses}\n        onRowClick={(e, selectedRow) => SetSelectedRow(selectedRow)}\n        options={{\n          rowStyle: rowData => ({\n            backgroundColor:\n              selectedRow && selectedRow.tableData.id === rowData.tableData.id\n                ? '#EEE'\n                : '#FFF'\n          })\n        }}\n        editable={{\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                if (oldData && newData.description && newData.amount) {\n                  if (oldData.id)\n                    props.startEditExpense(oldData.id, {\n                      description: newData.description,\n                      amount: newData.amount,\n                      createdAt: newData.createdAt,\n                      note: newData.note\n                    });\n                } else {\n                  SetMassage(\n                    whichErrorMassageToDisplay(\n                      newData.description,\n                      newData.amount\n                    )\n                  );\n                  props.setSnackBarStatus({\n                    isOpenAddExpense: false,\n                    isOpenError: true\n                  });\n                  reject('Invalid input.');\n                }\n                resolve();\n              }, 2000);\n            }),\n\n          onRowAdd: newData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                if (newData.description && newData.amount) {\n                  props.startAddExpense({\n                    description: newData.description,\n                    note: newData.note,\n                    amount: newData.amount,\n                    createdAt: newData.createdAt\n                  });\n                  props.setSnackBarStatus({\n                    isOpenAddExpense: true,\n                    isOpenError: false\n                  });\n                  resolve();\n                } else {\n                  SetMassage(\n                    whichErrorMassageToDisplay(\n                      newData.description,\n                      newData.amount\n                    )\n                  );\n                  props.setSnackBarStatus({\n                    isOpenAddExpense: false,\n                    isOpenError: true\n                  });\n                  reject('Invalid input.');\n                }\n              }, 2000);\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                if (oldData.id) props.startRemoveExpense(oldData.id);\n                resolve();\n              }, 2000);\n            })\n        }}\n      />\n      <ErrorSnackBar variant='error' massage={massage} />;\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  startEditExpense,\n  startRemoveExpense,\n  startSetExpenses,\n  startAddExpense,\n  setSnackBarStatus\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    expenses: state.expenses,\n    snackBar: state.snackBar\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpenseList);\n","import Snackbar from '@material-ui/core/Snackbar';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../redux/@types/state-interfaces';\nimport { setSnackBarStatus } from '../../redux/actions/snackBarActions';\nimport MySnackbarContentWrapper from './snackBarContentWrapper';\nimport * as snackBarConfigures from './snackBarsConfigures';\n\nconst SnackBarAddExpense: React.FC<snackBarConfigures.IProps> = props => {\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }}\n      open={props.snackBar.isOpenAddExpense}\n      autoHideDuration={5000}\n      TransitionComponent={props.snackBar.Transition}\n      onClose={() =>\n        props.setSnackBarStatus({\n          ...props.snackBar,\n          isOpenAddExpense: false\n        })\n      }\n    >\n      <MySnackbarContentWrapper\n        variant={props.variant}\n        message={props.massage}\n      />\n    </Snackbar>\n  );\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    snackBar: state.snackBar\n  };\n};\nconst mapDispatchToProps = {\n  setSnackBarStatus\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SnackBarAddExpense);\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../redux/@types/state-interfaces';\nimport { startSetExpenses } from '../redux/actions/expensesActions';\nimport ExpenseList from './expenseTable';\nimport AddExpenseSnackBar from './SnackBars/AddExpenseBar';\ninterface IProps {\n  startSetExpenses: () => void;\n  isMounted: boolean;\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginTop: theme.spacing(25)\n    }\n  })\n);\n\nconst ExpenseDashboardPage: React.FC<IProps> = props => {\n  React.useEffect(() => {\n    new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 2000);\n    }).then(() => {\n      SetIsMounted(true);\n    }); // eslint-disable-next-line\n  }, []);\n\n  const [isMounted, SetIsMounted] = React.useState(false);\n  const classes = useStyles();\n  return (\n    <div>\n      {isMounted ? (\n        <div>\n          {' '}\n          <ExpenseList />\n          <AddExpenseSnackBar\n            variant='success'\n            massage='Expense added sucessesfuly!'\n          />\n        </div>\n      ) : (\n        <div className={classes.root}>\n          <CircularProgress size={60} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  startSetExpenses\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    expenses: state.expenses,\n    snackBar: state.snackBar\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpenseDashboardPage);\n","import React from 'react';\n\nconst HelpPage:React.FC  = () => (\n  <div>\n    This is from my help component\n  </div>\n);\n\nexport default HelpPage;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { startLogin } from '../redux/actions/auth';\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      Yakir Ben Hillel {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\ninterface IProps {\n  startLogin: () => Promise<firebase.auth.UserCredential>;\n}\nconst Login: React.FC<IProps> = ({ startLogin }) => {\n  const classes = useStyles();\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          Sign in\n        </Typography>\n        <TextField\n          variant='outlined'\n          margin='normal'\n          required\n          fullWidth\n          id='email'\n          label='Email Address'\n          name='email'\n          autoComplete='email'\n          autoFocus\n        />\n        <TextField\n          variant='outlined'\n          margin='normal'\n          required\n          fullWidth\n          name='password'\n          label='Password'\n          type='password'\n          id='password'\n          autoComplete='current-password'\n        />\n        <FormControlLabel\n          control={<Checkbox value='remember' color='primary' />}\n          label='Remember me'\n        />\n        <Button\n          onClick={startLogin}\n          type='submit'\n          fullWidth\n          variant='contained'\n          color='primary'\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n        <Grid container>\n          <Grid item xs>\n            <Link href='#' variant='body2'>\n              Forgot password?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href='#' variant='body2'>\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\nconst mapDispatchToProps = {\n  startLogin\n};\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Login);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage:React.FC  = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import clsx from 'clsx';\nimport createHistory from 'history/createBrowserHistory';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport Bar from '../components/AppBar';\nimport useStyles from '../components/AppBarComponents/useStyles';\nimport ExpenseDashboardPage from '../components/ExpenseDashboardPage';\nimport HelpPage from '../components/HelpPage';\nimport Login from '../components/loginPage';\nimport NotFoundPage from '../components/NotFoundPage';\nimport { AppState } from '../redux/@types/state-interfaces';\nexport const history = createHistory();\ninterface IProps {\n  isAuthenticated: boolean;\n}\nconst AppRouter: React.FC<IProps> = props => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n\n  return (\n    <Router history={history}>\n      <div>\n        {props.isAuthenticated && <Bar open={open} setOpen={setOpen} />}\n        <main\n          className={clsx(classes.content, classes.grow, {\n            [classes.contentShift]: open\n          })}\n        >\n          <Switch>\n            <Route\n              path='/'\n              component={!props.isAuthenticated ? Login : ExpenseDashboardPage}\n              exact={true}\n            />\n            <Route\n              path='/dashboard'\n              component={props.isAuthenticated ? ExpenseDashboardPage : Login}\n            />\n            <Route path='/help' component={HelpPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </main>\n      </div>{' '}\n    </Router>\n  );\n};\n\nconst MapStateToProps = (state: AppState) => ({\n  isAuthenticated: !!state.authentication.uid\n});\nexport default connect(MapStateToProps)(AppRouter);\n","import { IExpense } from '../@types/state-interfaces';\nimport { ExpenseActionTypes } from '../@types/types';\n\nconst expensesReducerDefaultState: IExpense[] = [];\n\nconst expensesReducer = (\n  state = expensesReducerDefaultState,\n  action: ExpenseActionTypes\n) => {\n  switch (action.type) {\n    case 'ADD_EXPENSE': {\n      if (action.place !== undefined) {\n        //in case of edit\n        const arrayBeforeAddedExpense = state.slice(0, action.place);\n        const arrayAfterAddedExpense = state.slice(action.place);\n        return [\n          ...arrayBeforeAddedExpense,\n          action.expense,\n          ...arrayAfterAddedExpense\n        ];\n      } else return [...state, action.expense];\n    }\n    case 'REMOVE_EXPENSE':\n      return state.filter(({ id }) => id !== action.id);\n    case 'EDIT_EXPENSE':\n      return state.map(expense => {\n        if (expense.id === action.id) {\n          return {\n            ...expense,\n            ...action.updates\n          };\n        } else {\n          return expense;\n        }\n      });\n    case 'SET_EXPENSES':\n      return [...action.expenses];\n    default:\n      return state;\n  }\n};\nexport default expensesReducer;\n","import { IFilter } from '../@types/state-interfaces';\nimport { FilterActionTypes } from '../@types/types';\n\nconst filtersReducerDefaultState: IFilter = {\n  text: '',\n  sortBy: 'date',\n  startDate: undefined,\n  endDate: undefined\n};\n\nconst filtersReducer = (\n  state = filtersReducerDefaultState,\n  action: FilterActionTypes\n) => {\n  switch (action.type) {\n    case 'SET_TEXT_FILTER':\n      return {\n        ...state,\n        text: action.text\n      };\n    case 'SORT_BY_AMOUNT':\n      return {\n        ...state,\n        sortBy: 'amount'\n      };\n    case 'SORT_BY_DATE':\n      return {\n        ...state,\n        sortBy: 'date'\n      };\n    case 'SET_START_DATE':\n      return {\n        ...state,\n        startDate: action.startDate\n      };\n    case 'SET_END_DATE':\n      return {\n        ...state,\n        endDate: action.endDate\n      };\n    default:\n      return state;\n  }\n};\nexport default filtersReducer;\n","import Fade from '@material-ui/core/Fade';\nimport { ISnackBar } from '../@types/state-interfaces';\nimport { SnackBarActionTypes } from '../@types/types';\nconst snackBarReducerDefaultState: ISnackBar = {\n  isOpenAddExpense:false,\n  isOpenError:false,\n  Transition: Fade\n};\n\nconst snackBarReducer = (\n  state = snackBarReducerDefaultState,\n  action: SnackBarActionTypes\n) => {\n  switch (action.type) {\n    case 'SET_SNACK_BAR_STATUS':\n      return {\n        ...state,\n        ...action.snackBarStatus\n      };\n    default:\n      return state;\n  }\n};\nexport default snackBarReducer;\n","import { AuthActionTypes } from \"../@types/types\";\n\nexport default (state = {}, action:AuthActionTypes) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        uid: action.uid\n      };\n    case 'LOGOUT':\n      return {};\n    default:\n      return state;\n  }\n};\n","// @ts-nocheck\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter, { history } from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store/configureStore';\nimport { firebase } from './database/firebase';\nimport { login, logout } from './redux/actions/auth';\nimport { startSetExpenses } from './redux/actions/expensesActions';\nimport 'normalize.css/normalize.css';\nconst store = configureStore();\nconst Application = () => (\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>\n);\nlet hasRendered = false;\nconst renderApp = () => {\n  if (!hasRendered) {\n    ReactDOM.render(<Application />, document.getElementById('root'));\n    hasRendered = true;\n  }\n};\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    store.dispatch(login(user.uid));\n    store.dispatch(startSetExpenses());\n    renderApp();\n    if (history.location.pathname === '/') history.push('/dashboard');\n    console.log('logged in');\n  } else {\n    store.dispatch(logout());\n    renderApp();\n    console.log('logout');\n    history.push('/');\n  }\n});\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport expensesReducer from '../reducers/expensesReduce';\nimport filtersReducer from '../reducers/filtersReducer';\nimport snackBarReducer from '../reducers/snackBarReduce';\nimport authReducer from '../reducers/authReducer';\nimport thunk from 'redux-thunk';\n// Store creation\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      expenses: expensesReducer,\n      filters: filtersReducer,\n      snackBar: snackBarReducer,\n      authentication: authReducer\n    }),\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n  return store;\n};\n"],"sourceRoot":""}