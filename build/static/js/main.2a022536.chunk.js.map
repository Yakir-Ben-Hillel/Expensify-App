{"version":3,"sources":["images/no-data-template.jpg","components/AppBarComponents/useStyles.tsx","components/AppBarComponents/Drawer.tsx","database/firebase.js","redux/actions/auth.ts","components/AppBarComponents/RenderMenu.tsx","components/AppBar.tsx","redux/actions/expensesActions.ts","redux/actions/snackBarActions.ts","components/ExpenseFormFnc.tsx","components/FormComponents/AmountComponent.tsx","components/FormComponents/DateComponent.tsx","components/FormComponents/DescriptionComponent.tsx","components/FormComponents/NoteComponent.tsx","components/FormComponents/formDialog.tsx","components/FormComponents/removeDialog.tsx","components/searchBar.tsx","redux/actions/filterActions.ts","components/mobileExpenses.tsx","redux/selectors/visibleExpenses.tsx","components/SnackBars/snackBarsConfigures.ts","components/SnackBars/snackBarContentWrapper.tsx","components/SnackBars/errorBar.tsx","components/expenseTable.tsx","components/SnackBars/AddExpenseBar.tsx","components/ExpenseDashboardPage.tsx","components/authPages/signup.tsx","components/authPages/buttons/googleSignIn.tsx","components/authPages/loginPage.tsx","components/NotFoundPage.tsx","routers/AppRouter.tsx","redux/reducers/expensesReduce.ts","redux/reducers/filtersReducer.ts","redux/reducers/snackBarReduce.ts","redux/reducers/authReducer.ts","index.js","redux/store/configureStore.ts"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","display","grow","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","height","pointerEvents","inputRoot","color","inputInput","sectionDesktop","sectionMobile","content","contentShift","DrawerHandler","open","handleDrawerClose","classes","Drawer","className","variant","anchor","paper","IconButton","onClick","Divider","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","googleAuthProvider","auth","GoogleAuthProvider","useDeviceLanguage","startLogout","signOut","mapDispatchToProps","connect","anchorEl","menuId","handleMenuClose","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","onClose","MenuItem","setOpen","React","useState","setAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","AppBar","clsx","Toolbar","Typography","noWrap","edge","aria-label","aria-controls","aria-haspopup","event","currentTarget","RenderMenu","startAddExpense","expenseData","dispatch","getState","uid","authentication","description","note","amount","createdAt","expense","Date","toDateString","ref","push","then","place","type","addExpense","key","startRemoveExpense","remove","removeExpense","startEditExpense","updates","update","editExpense","startSetExpenses","once","Snapshot","expenses","forEach","childrenSnapShot","val","setExpenses","setSnackBarStatus","snackBarStatus","whichErrorMassageToDisplay","withStyles","marginTop","input","background","border","fontSize","fontFamily","join","borderColor","boxShadow","InputBase","flexWrap","formControl","margin","extendedIcon","textField","overflowWrap","flexBasis","Amount","onAmountChange","touch","SetTouch","userInsertedInput","SetUserInsertedInput","error","ExpenseFnc","FormControl","TextField","autoComplete","label","required","value","onChange","onChangeCapture","onFocus","helperText","InputProps","startAdornment","InputAdornment","endAdornment","DatePicker","onDateChange","MuiPickersUtilsProvider","utils","DataFnsUtils","format","KeyboardButtonProps","Description","onDescriptionChange","autoCorrect","Note","onNoteChange","placeholder","multiline","rowsMax","props","SetDescription","SetAmount","SetCreatedAt","SetNote","useEffect","undefined","onClear","Dialog","setDialogOpen","setTimeout","aria-labelledby","aria-describedby","DialogTitle","isUpdating","DialogContent","DialogContentText","onSubmit","e","preventDefault","isOpenAddExpense","isOpenError","target","match","parseFloat","DialogActions","Button","autoFocus","a","setTextFilter","text","state","filters","style","marginBottom","disabled","maxWidth","typography","pxToRem","noInfoContainer","backgroundImage","BackgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","secondary","heading","secondaryHeading","wordWrap","fixed","bottom","right","actionButtons","snackBar","expanded","setExpanded","expenseToEdit","setExpenseToEdit","SetUid","removeDialogOpen","setRemoveDialogOpen","formDialogOpen","setFormDialogOpen","setIsUpdating","filteredExpenses","filter","textMatch","toLowerCase","includes","amountMatch","toString","createdAtMatch","noteMatch","length","Container","map","index","ExpansionPanel","panel","isExpanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ExpansionPanelActions","Tooltip","size","Fab","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","green","dark","main","amber","icon","iconVariant","opacity","message","snackBarConfigures","Icon","SnackbarContent","action","Snackbar","autoHideDuration","TransitionComponent","Transition","massage","selectedRow","SetSelectedRow","SetMassage","medium","columns","field","cellStyle","wordBreak","editComponent","DateComponent","data","onRowClick","options","rowStyle","rowData","tableData","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","onRowAdd","onRowDelete","small","down","flexDirection","SetIsMounted","isMounted","CircularProgress","Copyright","align","body","avatar","form","submit","SignUp","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","errorMessage","setErrorMessage","CssBaseline","Avatar","createUserWithEmailAndPassword","catch","console","log","code","errorCode","whichMessageToShow","history","Grid","container","item","xs","sm","name","fullWidth","justify","href","Box","mt","buttonIcon","verticalAlign","boxSizing","buttonText","GoogleSignInButton","viewBox","xmlns","d","fill","googleButton","borderWidth","whiteSpace","transitionProperty","transitionTimingFunction","transitionDuration","fontWeight","startLogin","signInWithPopup","signInWithEmailAndPassword","FormControlLabel","control","Checkbox","NotFoundPage","createBrowserHistory","isAuthenticated","exact","path","ExpenseDashboardPage","Login","Signup","expensesReducerDefaultState","expensesReducer","arrayBeforeAddedExpense","slice","arrayAfterAddedExpense","filtersReducerDefaultState","sortBy","startDate","endDate","filtersReducer","snackBarReducerDefaultState","Fade","snackBarReducer","store","createStore","combineReducers","authReducer","composeWithDevTools","applyMiddleware","thunk","Application","hasRendered","renderApp","ReactDOM","render","document","getElementById","onAuthStateChanged","user"],"mappings":"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","file":"static/js/main.2a022536.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-data-template.27d8c7fb.jpg\";","import {\n  createStyles,\n  fade,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles';\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex'\n    },\n    grow: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      [theme.breakpoints.up('sm')]: {\n        display: 'block'\n      }\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    hide: {\n      display: 'none'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end'\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto'\n      }\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    inputRoot: {\n      color: 'inherit'\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 120,\n        '&:focus': {\n          width: 200\n        }\n      }\n    },\n    sectionDesktop: {\n      display: 'flex',\n      // [theme.breakpoints.up('md')]: {\n      //   display: 'flex'\n      // }\n    },\n    sectionMobile: {\n      display: 'flex',\n      // [theme.breakpoints.up('md')]: {\n      //   display: 'none'\n      // }\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      marginLeft: 0\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginLeft: drawerWidth\n    }\n  })\n);\nexport default useStyles;\n","import Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddIcon from '@material-ui/icons/Add';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport EditIcon from '@material-ui/icons/Edit';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport HomeIcon from '@material-ui/icons/Home';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport useStyles from './useStyles';\n\ninterface IDrawer {\n  open: boolean;\n  handleDrawerClose(): void;\n}\nconst DrawerHandler: React.FC<IDrawer> = ({ open, handleDrawerClose }) => {\n  const classes = useStyles();\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant='persistent'\n      anchor='left'\n      open={open}\n      classes={{\n        paper: classes.drawerPaper\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <ListItem button component={Link} to={'/dashboard'}>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText primary='Home' />\n        </ListItem>\n        <ListItem button component={Link} to={'/create'}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText primary='Add Expense' />\n        </ListItem>\n        <ListItem button component={Link} to={'/edit'}>\n          <ListItemIcon>\n            <EditIcon />\n          </ListItemIcon>\n          <ListItemText primary='Edit Expense' />\n        </ListItem>\n        <ListItem button component={Link} to={'/help'}>\n          <ListItemIcon>\n            <HelpOutlineIcon />\n          </ListItemIcon>\n          <ListItemText primary='Help' />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\nexport default DrawerHandler;\n","import firebase from 'firebase';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAVonlw8QdTL2dUHQHQXd3GvHPvHy2Sn1A',\n  authDomain: 'expensify-app-ec00d.firebaseapp.com',\n  databaseURL: 'https://expensify-app-ec00d.firebaseio.com',\n  projectId: 'expensify-app-ec00d',\n  storageBucket: '',\n  messagingSenderId: '959835198480',\n  appId: '1:959835198480:web:ac9a2d855577c1ee662695'\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst database = firebase.database();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nfirebase.auth().useDeviceLanguage();\nexport { firebase, googleAuthProvider, database as default };\n","import { firebase, googleAuthProvider } from '../../database/firebase';\nimport { Login, Logout} from '../@types/types';\n\nexport const login = (uid: string): Login => {\n  return {\n    type: 'LOGIN',\n    uid\n  };\n};\nexport const logout = (): Logout => {\n  return {\n    type: 'LOGOUT'\n  };\n};\nexport const startLogin = () => {\n  return () => {\n    return firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n};\nexport const startLogout = () => {\n  return () => {\n    return firebase.auth().signOut();\n  };\n};\n","import Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startLogout } from '../../redux/actions/auth';\n\ninterface IMenu {\n  anchorEl: HTMLElement | null;\n  open: boolean;\n  menuId: string;\n  handleMenuClose(): void;\n  startLogout: () => Promise<void>;\n}\nconst renderMenu: React.FC<IMenu> = ({\n  anchorEl,\n  open,\n  menuId,\n  handleMenuClose,\n  startLogout\n}) => (\n  <Menu\n    anchorEl={anchorEl}\n    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n    id={menuId}\n    keepMounted\n    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n    open={open}\n    onClose={handleMenuClose}\n  >\n    <MenuItem onClick={() => startLogout() && handleMenuClose}>Logout</MenuItem>\n  </Menu>\n);\nconst mapDispatchToProps = {\n  startLogout\n};\nexport default connect(\n  null,\n  mapDispatchToProps\n)(renderMenu);\n","import AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport clsx from 'clsx';\nimport React from 'react';\nimport DrawerHandler from './AppBarComponents/Drawer';\nimport RenderMenuDesktop from './AppBarComponents/RenderMenu';\nimport useStyles from './AppBarComponents/useStyles';\nimport { connect } from 'react-redux';\nimport { startLogout } from '../redux/actions/auth';\ninterface IBar {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  startLogout: () => Promise<void>;\n}\nconst Bar: React.FC<IBar> = ({ open, setOpen }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [\n    mobileMoreAnchorEl,\n    setMobileMoreAnchorEl\n  ] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const menuId = 'primary-search-account-menu';\n  // const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMenu = () => (\n    <RenderMenuDesktop\n      anchorEl={anchorEl}\n      open={isMenuOpen}\n      handleMenuClose={handleMenuClose}\n      menuId={menuId}\n    />\n  );\n  // const renderMobileMenu = () =>\n  //   RenderMobileMenu({\n  //     mobileMoreAnchorEl,\n  //     isMobileMenuOpen,\n  //     mobileMenuId,\n  //     handleMobileMenuClose,\n  //     handleProfileMenuOpen\n  //   });\n  // function handleDrawerOpen() {\n  //   setOpen(true);\n  // }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  function handleProfileMenuOpen(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  // function handleMobileMenuOpen(event: React.MouseEvent<HTMLElement>) {\n  //   setMobileMoreAnchorEl(event.currentTarget);\n  // }\n  return (\n    <div>\n      <AppBar\n        className={clsx(classes.appBar, { [classes.appBarShift]: open })}\n        position='static'\n      >\n        <Toolbar>\n          <Typography className={classes.title} variant='h6' noWrap>\n            Expensify App\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              edge='end'\n              aria-label='account of current user'\n              aria-controls={menuId}\n              aria-haspopup='true'\n              onClick={handleProfileMenuOpen}\n              color='inherit'\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          {/* <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label='show more'\n              aria-controls={mobileMenuId}\n              aria-haspopup='true'\n              onClick={handleMobileMenuOpen}\n              color='inherit'\n            >\n              <MoreIcon />\n            </IconButton>\n          </div> */}\n        </Toolbar>\n        <DrawerHandler open={open} handleDrawerClose={handleDrawerClose} />\n      </AppBar>\n      {/* {renderMobileMenu()} */}\n      {renderMenu()}\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  startLogout\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Bar);\n","import { IExpense, AppState } from '../@types/state-interfaces';\nimport {\n  RemoveExpenseAction,\n  EditExpenseAction,\n  AddExpenseAction,\n  SetExpensesAction\n} from '../@types/types';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport database from '../../database/firebase';\n//Add Expense\nexport const addExpense = (\n  expense: IExpense,\n  place?: number\n): AddExpenseAction => {\n  return {\n    type: 'ADD_EXPENSE',\n    expense,\n    place\n  };\n};\nexport const startAddExpense = (expenseData: {\n  description: string;\n  note?: string;\n  amount: number;\n  createdAt?: string;\n}) => {\n  return (\n    dispatch: ThunkDispatch<{}, {}, AnyAction>,\n    getState: () => AppState\n  ) => {\n    const uid = getState().authentication.uid;\n    const {\n      description = '',\n      note = '',\n      amount = 0,\n      createdAt = new Date().toDateString()\n    } = expenseData;\n    const expense = {\n      description,\n      note,\n      amount,\n      createdAt\n    };\n    database\n      .ref(`users/${uid}/expenses`)\n      .push(expense)\n      .then(ref => {\n        dispatch(\n          addExpense({\n            id: ref.key,\n            ...expense\n          })\n        );\n      });\n  };\n};\nexport const removeExpense = (id: IExpense['id']): RemoveExpenseAction => {\n  return {\n    type: 'REMOVE_EXPENSE',\n    id\n  };\n};\nexport const startRemoveExpense = (id: IExpense['id']) => {\n  return (\n    dispatch: ThunkDispatch<{}, {}, AnyAction>,\n    getState: () => AppState\n  ) => {\n    const uid = getState().authentication.uid;\n    database\n      .ref(`users/${uid}/expenses/${id}`)\n      .remove()\n      .then(() => {\n        dispatch(removeExpense(id));\n      });\n  };\n};\n// EDIT_EXPENSE\nexport const editExpense = (\n  id: IExpense['id'],\n  updates: {\n    id?: string;\n    description?: string;\n    note?: string;\n    amount?: number;\n    createdAt?: string;\n  }\n): EditExpenseAction => ({\n  type: 'EDIT_EXPENSE',\n  id,\n  updates\n});\nexport const startEditExpense = (\n  id: IExpense['id'],\n  updates: {\n    id?: string;\n    description?: string;\n    note?: string;\n    amount?: number;\n    createdAt?: string;\n  }\n) => {\n  return (\n    dispatch: ThunkDispatch<{}, {}, AnyAction>,\n    getState: () => AppState\n  ) => {\n    const uid = getState().authentication.uid;\n    database\n      .ref(`users/${uid}/expenses/${id}`)\n      .update(updates)\n      .then(() => {\n        dispatch(editExpense(id, updates));\n      });\n  };\n};\nexport const setExpenses = (expenses: IExpense[]): SetExpensesAction => ({\n  type: 'SET_EXPENSES',\n  expenses\n});\nexport const startSetExpenses = () => {\n  return (\n    dispatch: ThunkDispatch<{}, {}, AnyAction>,\n    getState: () => AppState\n  ) => {\n    const uid = getState().authentication.uid;\n    database\n      .ref(`users/${uid}/expenses`)\n      .once('value')\n      .then(Snapshot => {\n        const expenses: IExpense[] = [];\n        Snapshot.forEach(childrenSnapShot => {\n          expenses.push({\n            id: childrenSnapShot.key,\n            ...childrenSnapShot.val()\n          });\n        });\n        dispatch(setExpenses(expenses));\n      });\n  };\n};\n","import { ISnackBar } from '../@types/state-interfaces';\nimport { SetSnackBarStatus } from '../@types/types';\nexport const setSnackBarStatus = (\n  snackBarStatus: ISnackBar\n): SetSnackBarStatus => {\n  return {\n    type: 'SET_SNACK_BAR_STATUS',\n    snackBarStatus\n  };\n};\n","import InputBase from '@material-ui/core/InputBase';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles\n} from '@material-ui/core/styles';\nimport React from 'react';\nimport NumberFormat from 'react-number-format';\n\n// eslint-disable-next-line\n\nexport function whichErrorMassageToDisplay(\n  description: string,\n  amount: number\n): string {\n  if (!description && !amount) return 'Description and Amount are required!';\n  else if (!description && amount) return 'Description is required!';\n  else return 'Amount is required!';\n}\n\nexport function NumberFormatCustom(props: NumberFormatCustomProps) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value\n          }\n        });\n      }}\n      thousandSeparator\n    />\n  );\n}\n\nexport const BootstrapInput = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3)\n      }\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"'\n      ].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n      }\n    }\n  })\n)(InputBase);\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: 'max'\n    },\n    formControl: {\n      margin: theme.spacing(1)\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1)\n    },\n    textField: {\n      overflowWrap: 'break-word',\n      flexBasis: 100\n    }\n  })\n);\n\n//import {IExpense} from '../redux/interfaces/state-interfaces'\nexport interface NumberFormatCustomProps {\n  inputRef: (instance: NumberFormat | null) => void;\n  onChange: (event: { target: { value: string } }) => void;\n}\n\nexport interface State {\n  description: string;\n  note: string;\n  amount: number;\n  createdAt: string;\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport * as ExpenseFnc from '../ExpenseFormFnc';\nimport React from 'react';\ninterface IAmount {\n  amount: string | number | null;\n  onAmountChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\nconst Amount: React.FC<IAmount> = ({ amount, onAmountChange }) => {\n  const [touch, SetTouch] = React.useState(false);\n  const [userInsertedInput, SetUserInsertedInput] = React.useState(false);\n  const error = amount === '' && touch && userInsertedInput;\n  const classes = ExpenseFnc.useStyles();\n  return (\n    <div>\n      <FormControl className={classes.root}>\n        <TextField\n          margin='dense'\n          id='filled-adornment-amount'\n          autoComplete='off'\n          //variant='filled'\n          label='Amount'\n          required\n          value={amount || ''}\n          onChange={onAmountChange}\n          onChangeCapture={() => {\n            SetUserInsertedInput(true);\n          }}\n          error={error}\n          onFocus={() => {\n            SetTouch(true);\n          }}\n          helperText={error ? 'Amount is empty!' : ''}\n          InputProps={{\n            startAdornment: <InputAdornment position='start'>$</InputAdornment>,\n            endAdornment: error && (\n              <InputAdornment position='end'>\n                <ErrorIcon color='secondary' />\n              </InputAdornment>\n            )\n            // inputComponent: ExpenseFnc.NumberFormatCustom as any\n          }}\n        />{' '}\n      </FormControl>\n    </div>\n  );\n};\nexport default Amount;\n","import DataFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\nimport React from 'react';\nimport * as ExpenseFnc from '../ExpenseFormFnc';\n\ninterface IDatePicker {\n  createdAt: MaterialUiPickersDate;\n  onDateChange: (createdAt: MaterialUiPickersDate) => void;\n}\nconst DatePicker: React.FC<IDatePicker> = ({ createdAt, onDateChange }) => {\n  const classes = ExpenseFnc.useStyles();\n  return (\n    <div>\n      <MuiPickersUtilsProvider utils={DataFnsUtils}>\n        <KeyboardDatePicker\n          className={classes.root}\n          margin='dense'\n          id='date-picker-dialog'\n          label='Date'\n          format='dd/MM/yyyy'\n          value={createdAt}\n          onChange={onDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n        />\n      </MuiPickersUtilsProvider>\n    </div>\n  );\n};\nexport default DatePicker;\n","import { InputAdornment, TextField } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport React from 'react';\n\ninterface IDescription {\n  description: string;\n  onDescriptionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\nconst Description: React.FC<IDescription> = ({\n  description = '',\n  onDescriptionChange\n}) => {\n  const [touch, SetTouch] = React.useState(false);\n  const [userInsertedInput, SetUserInsertedInput] = React.useState(false);\n  const error = description === '' && touch && userInsertedInput;\n  return (\n    <div>\n      <FormControl>\n        <TextField\n          id='filled-adornment-description'\n          margin='dense'\n          required\n          autoComplete='off'\n          autoCorrect='off'\n          label='Description'\n          error={error}\n          onFocus={() => SetTouch(true)}\n          helperText={error ? 'Description is empty!' : ''}\n          value={description}\n          onChange={onDescriptionChange}\n          onChangeCapture={() => {\n            SetUserInsertedInput(true);\n          }}\n          InputProps={{\n            endAdornment: error && (\n              <InputAdornment position='end'>\n                <ErrorIcon color='secondary' />\n              </InputAdornment>\n            )\n          }}\n        />\n      </FormControl>\n    </div>\n  );\n};\nexport default Description;\n","import TextField from '@material-ui/core/TextField';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useStyles } from '../ExpenseFormFnc';\ninterface INote {\n  note: string | undefined;\n  onNoteChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n}\nconst Note: React.FC<INote> = ({ note, onNoteChange }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <TextField\n        id='filled-adornment-multiline-flexible'\n        placeholder='Add your note here...'\n        label='Note'\n        autoComplete='off'\n        multiline\n        rowsMax='4'\n        value={note}\n        onChange={onNoteChange}\n        className={clsx(classes.textField, classes.root)}\n        margin='dense'\n      />{' '}\n    </div>\n  );\n};\nexport default Note;\n","import { FormControl } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { MaterialUiPickersDate } from '@material-ui/pickers';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { IExpense, ISnackBar } from '../../redux/@types/state-interfaces';\nimport { SetSnackBarStatus } from '../../redux/@types/types';\nimport {\n  startAddExpense,\n  startEditExpense\n} from '../../redux/actions/expensesActions';\nimport { setSnackBarStatus } from '../../redux/actions/snackBarActions';\nimport Amount from './AmountComponent';\nimport DatePicker from './DateComponent';\nimport Description from './DescriptionComponent';\nimport Note from './NoteComponent';\n\ninterface IProps {\n  open: boolean;\n  isUpdating: boolean;\n  expense?: IExpense;\n  setDialogOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  startAddExpense: (expenseData: {\n    description: string;\n    note?: string | undefined;\n    amount: number;\n    createdAt?: string | undefined;\n  }) => void;\n  startEditExpense: (\n    id: IExpense['id'],\n    updates: {\n      id?: string;\n      description?: string;\n      note?: string;\n      amount?: number;\n      createdAt?: string;\n    }\n  ) => void;\n  setSnackBarStatus: (snackBarStatus: ISnackBar) => SetSnackBarStatus;\n}\nconst FormDialog: React.FC<IProps> = props => {\n  const [description, SetDescription] = React.useState(\n    props.expense ? props.expense.description : ''\n  );\n  const [amount, SetAmount] = React.useState(\n    props.expense ? props.expense.amount : 0\n  );\n  const [createdAt, SetCreatedAt] = React.useState(\n    props.expense ? new Date(props.expense.createdAt) : new Date()\n  );\n  const [note, SetNote] = React.useState<string | undefined>(\n    props.expense ? props.expense.note : ''\n  );\n\n  const onDescriptionChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const description = e.target.value;\n    SetDescription(description);\n  };\n  const onNoteChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const note = e.target.value;\n    SetNote(note);\n  };\n  const onAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const amount = e.target.value;\n\n    if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n      SetAmount(parseFloat(amount));\n    }\n  };\n  const onDateChange = (createdAt: MaterialUiPickersDate) => {\n    if (createdAt) {\n      SetCreatedAt(createdAt);\n    }\n  };\n  React.useEffect(() => {\n    if (props.expense !== undefined) {\n      SetDescription(props.expense.description);\n      SetAmount(props.expense.amount);\n      SetCreatedAt(new Date(props.expense.createdAt));\n      SetNote(props.expense.note);\n    }\n  }, [props.expense]);\n\n  const onClear = () => {\n    SetDescription('');\n    SetAmount(0);\n    SetCreatedAt(new Date());\n    SetNote('');\n  };\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const expense = {\n      description,\n      amount,\n      createdAt: createdAt.toDateString(),\n      note\n    };\n    if (props.isUpdating && props.expense) {\n      if (props.expense.description && props.expense.amount)\n        props.startEditExpense(props.expense.id, expense);\n    } else {\n      props.startAddExpense(expense);\n      props.setSnackBarStatus({\n        isOpenAddExpense: true,\n        isOpenError: false\n      });\n    }\n    props.setDialogOpen(false);\n    setTimeout(() => onClear(), 0);\n  };\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={() => {\n          props.setDialogOpen(false);\n          setTimeout(() => onClear(), 0);\n        }}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>\n          {!props.isUpdating ? 'Add Expense' : 'Edit Expense'}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            description and amount are required.\n          </DialogContentText>\n          <FormControl>\n            <form id='form-dialog' onSubmit={onSubmit}>\n              <Description\n                description={description}\n                onDescriptionChange={onDescriptionChange}\n              />\n              <Amount amount={amount} onAmountChange={onAmountChange} />\n              <DatePicker createdAt={createdAt} onDateChange={onDateChange} />\n              <Note note={note} onNoteChange={onNoteChange} />\n              <DialogActions>\n                <Button\n                  onClick={() => {\n                    props.setDialogOpen(false);\n                    setTimeout(() => onClear(), 0);\n                  }}\n                  color='primary'\n                  type='reset'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  type='submit'\n                  id='form-dialog'\n                  color='primary'\n                  autoFocus\n                >\n                  Save\n                </Button>\n              </DialogActions>\n            </form>\n          </FormControl>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  startAddExpense,\n  startEditExpense,\n  setSnackBarStatus\n};\nexport default connect(\n  null,\n  mapDispatchToProps\n)(FormDialog);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { startRemoveExpense } from '../../redux/actions/expensesActions';\nimport { connect } from 'react-redux';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\ninterface IProps {\n  open: boolean;\n  setDialogOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  startRemoveExpense: (id: string) => void;\n  uid: string | null;\n}\nconst RemoveDialog: React.FC<IProps> = props => {\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={() => props.setDialogOpen(false)}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>\n          {'Are you sure you want to delete the expense?'}\n        </DialogTitle>\n        {/* <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent> */}\n        <DialogActions>\n          <Button onClick={() => props.setDialogOpen(false)} color='primary'>\n            Cancel\n          </Button>\n          <Button\n            onClick={async () => {\n              if (props.uid) props.startRemoveExpense(props.uid);\n              props.setDialogOpen(false);\n            }}\n            color='primary'\n            autoFocus\n          >\n            Yes, remove\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  startRemoveExpense\n};\nexport default connect(\n  null,\n  mapDispatchToProps\n)(RemoveDialog);\n","import {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  TextField\n} from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState, IFilter } from '../redux/@types/state-interfaces';\nimport { SetTextFilter } from '../redux/@types/types';\nimport { setTextFilter } from '../redux/actions/filterActions';\ninterface IProps {\n  filters: IFilter;\n  setTextFilter: (text: string) => SetTextFilter;\n}\nconst SearchBar: React.FC<IProps> = props => {\n  return (\n    <div>\n      <FormControl>\n        <TextField\n          id='filled-adornment-search'\n          placeholder='Search'\n          value={props.filters.text}\n          style={{\n            marginBottom: '10px'\n          }}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            props.setTextFilter(e.target.value);\n          }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position='start'>\n                <SearchIcon />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position='end'>\n                <IconButton\n                  onClick={() => props.setTextFilter('')}\n                  disabled={props.filters.text === ''}\n                >\n                  <ClearIcon />\n                </IconButton>\n              </InputAdornment>\n            )\n          }}\n        />\n      </FormControl>\n    </div>\n  );\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    filters: state.filters\n  };\n};\nconst mapDispatchToProps = {\n  setTextFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import { SetEndDate, SetStartDate, SetTextFilter, SortByAmount, SortByDate } from '../@types/types';\nexport const setTextFilter = (text = ''): SetTextFilter => ({\n  type: 'SET_TEXT_FILTER',\n  text\n});\n\n// SORT_BY_AMOUNT\nexport const sortByAmount = (): SortByAmount => ({\n  type: 'SORT_BY_AMOUNT'\n});\n// SORT_BY_DATE\nexport const sortByDate = (): SortByDate => ({\n  type: 'SORT_BY_DATE'\n});\n// SET_START_DATE\nexport const setStartDate = (startDate: string): SetStartDate => ({\n  type: 'SET_START_DATE',\n  startDate\n});\n// SET_END_DATE\nexport const setEndDate = (endDate: string): SetEndDate => ({\n  type: 'SET_END_DATE',\n  endDate\n});\n","import {\n  Container,\n  ExpansionPanelActions,\n  Fab,\n  Tooltip\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport NoteIcon from '@material-ui/icons/Note';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport BackgroundImage from '../images/no-data-template.jpg';\nimport {\n  AppState,\n  IExpense,\n  IFilter,\n  ISnackBar\n} from '../redux/@types/state-interfaces';\nimport { SetSnackBarStatus } from '../redux/@types/types';\nimport {\n  startAddExpense,\n  startEditExpense,\n  startRemoveExpense,\n  startSetExpenses\n} from '../redux/actions/expensesActions';\nimport { setSnackBarStatus } from '../redux/actions/snackBarActions';\nimport visibleExpenses from '../redux/selectors/visibleExpenses';\nimport FormDialog from './FormComponents/formDialog';\nimport RemoveDialog from './FormComponents/removeDialog';\nimport SearchBar from './searchBar';\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: '100%',\n      fontSize: theme.typography.pxToRem(15)\n    },\n    noInfoContainer: {\n      display: 'block',\n      height: '80vh',\n      backgroundImage: `url(${BackgroundImage})`,\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      color: theme.palette.text.secondary\n    },\n    heading: {\n      flexBasis: '66.66%',\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      color: theme.palette.text.secondary,\n      display: 'block',\n      width: '80%',\n      alignItems: 'center',\n      wordWrap: 'break-word'\n    },\n    fixed: {\n      position: 'fixed',\n      bottom: theme.spacing(3),\n      right: theme.spacing(3)\n    },\n    actionButtons: {\n      margin: 0,\n      padding: '0 0 8px 0'\n    }\n  })\n);\ninterface IProps {\n  expenses: IExpense[];\n  filters: IFilter;\n  startRemoveExpense: (id: string) => void;\n  startSetExpenses: () => void;\n  startAddExpense: (expenseData: {\n    description: string;\n    note?: string;\n    amount: number;\n    createdAt?: string;\n  }) => void;\n  setSnackBarStatus: (snackBarStatus: ISnackBar) => SetSnackBarStatus;\n}\nconst MobileExpensesList: React.FC<IProps> = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState<number | false>(false);\n  const [expenseToEdit, setExpenseToEdit] = React.useState();\n  const [uid, SetUid] = React.useState<string | null>('');\n  const [removeDialogOpen, setRemoveDialogOpen] = React.useState(false);\n  const [formDialogOpen, setFormDialogOpen] = React.useState(false);\n  const [isUpdating, setIsUpdating] = React.useState(false);\n  const filteredExpenses = visibleExpenses(props.expenses, props.filters.text);\n  const handleChange = (panel: number) => (\n    event: React.ChangeEvent<{}>,\n    isExpanded: boolean\n  ) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  return (\n    <div className={classes.root}>\n      {props.expenses.length === 0 ? (\n        <div>\n          <Container maxWidth='md' className={classes.noInfoContainer}>\n            {' '}\n            <Typography variant='h6'>Add an expense to start</Typography>\n          </Container>\n          <FormDialog\n            open={formDialogOpen}\n            setDialogOpen={setFormDialogOpen}\n            isUpdating={false}\n          />\n        </div>\n      ) : (\n        <div>\n          <Container maxWidth='md'>\n            <Typography variant='h6'>Expenses List</Typography>\n            <SearchBar />\n            <RemoveDialog\n              open={removeDialogOpen}\n              setDialogOpen={setRemoveDialogOpen}\n              uid={uid}\n            />\n            <FormDialog\n              open={formDialogOpen}\n              setDialogOpen={setFormDialogOpen}\n              isUpdating={isUpdating}\n              expense={expenseToEdit}\n            />\n            {filteredExpenses.map((expense, index) => (\n              <ExpansionPanel\n                key={index}\n                expanded={expanded === index}\n                onChange={handleChange(index)}\n              >\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography className={classes.heading}>\n                    {expense.description}\n                  </Typography>\n                  <Typography className={classes.secondaryHeading}>\n                    ${expense.amount}\n                  </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.secondaryHeading}>\n                  <Typography>\n                    <EventNoteIcon />\n                    Created At: {expense.createdAt}\n                  </Typography>\n                  {expense.note && (\n                    <Typography variant='body1'>\n                      <NoteIcon /> Note: {expense.note}\n                    </Typography>\n                  )}\n                </ExpansionPanelDetails>\n                <ExpansionPanelActions>\n                  <Tooltip title='Edit' aria-label='edit'>\n                    <Button\n                      className={classes.actionButtons}\n                      size='small'\n                      color='primary'\n                      onClick={() => {\n                        setExpenseToEdit(expense);\n                        setIsUpdating(true);\n                        setFormDialogOpen(true);\n                      }}\n                    >\n                      <EditOutlinedIcon />\n                    </Button>\n                  </Tooltip>\n                  <Tooltip title='Remove' aria-label='remove'>\n                    <Button\n                      className={classes.actionButtons}\n                      size='small'\n                      color='secondary'\n                      onClick={() => {\n                        SetUid(expense.id);\n                        setRemoveDialogOpen(true);\n                      }}\n                    >\n                      <DeleteOutlinedIcon />\n                    </Button>\n                  </Tooltip>\n                </ExpansionPanelActions>\n              </ExpansionPanel>\n            ))}\n          </Container>\n        </div>\n      )}\n      <Tooltip title='Add' aria-label='add'>\n        <Fab\n          color='secondary'\n          className={classes.fixed}\n          onClick={() => {\n            setIsUpdating(false);\n            setFormDialogOpen(true);\n          }}\n        >\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  startEditExpense,\n  startRemoveExpense,\n  startSetExpenses,\n  startAddExpense,\n  setSnackBarStatus\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    expenses: state.expenses,\n    filters: state.filters,\n    snackBar: state.snackBar\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileExpensesList);\n","import { IExpense } from '../@types/state-interfaces';\n\nexport default (expenses: IExpense[], text: string) => {\n  return expenses.filter((expense: IExpense) => {\n    const textMatch = expense.description\n      .toLowerCase()\n      .includes(text.toLowerCase());\n    const amountMatch = expense.amount.toString().includes(text.toLowerCase());\n    const createdAtMatch = expense.createdAt\n      .toLowerCase()\n      .includes(text.toLowerCase());\n    const noteMatch = expense.note.toLowerCase().includes(text.toLowerCase());\n    return textMatch || amountMatch || createdAtMatch || noteMatch;\n  });\n};\n","import { ISnackBar } from '../../redux/@types/state-interfaces';\nimport { SetSnackBarStatus } from '../../redux/@types/types';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { amber, green } from '@material-ui/core/colors';\n\nexport const variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nexport interface IProps {\n  setSnackBarStatus(snackBarStatus: ISnackBar): SetSnackBarStatus;\n  snackBar: ISnackBar;\n  variant: keyof typeof variantIcon;\n  massage: string;\n}\n","import IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CloseIcon from '@material-ui/icons/Close';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState, ISnackBar } from '../../redux/@types/state-interfaces';\nimport { SetSnackBarStatus } from '../../redux/@types/types';\nimport { setSnackBarStatus } from '../../redux/actions/snackBarActions';\nimport * as snackBarConfigures from './snackBarsConfigures';\n\nexport interface Props {\n  className?: string;\n  message?: string;\n  variant: keyof typeof snackBarConfigures.variantIcon;\n  setSnackBarStatus(snackBarStatus: ISnackBar): SetSnackBarStatus;\n  snackBar: ISnackBar;\n}\n\nconst MySnackbarContentWrapper: React.FC<Props> = props => {\n  const classes = snackBarConfigures.useStyles();\n  const Icon = snackBarConfigures.variantIcon[props.variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[props.variant])}\n      aria-describedby='client-snackbar'\n      message={\n        <span id='client-snackbar' className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {props.message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key='close'\n          aria-label='close'\n          color='inherit'\n          onClick={() =>\n            props.setSnackBarStatus({\n              ...props.snackBar,\n              isOpenAddExpense: false,\n              isOpenError: false\n            })\n          }\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n    />\n  );\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    snackBar: state.snackBar\n  };\n};\nconst mapDispatchToProps = {\n  setSnackBarStatus\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MySnackbarContentWrapper);\n","import Snackbar from '@material-ui/core/Snackbar';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../redux/@types/state-interfaces';\nimport { setSnackBarStatus } from '../../redux/actions/snackBarActions';\nimport MySnackbarContentWrapper from './snackBarContentWrapper';\nimport * as snackBarConfigures from './snackBarsConfigures';\nconst ErrorBar: React.FC<snackBarConfigures.IProps> = props => {\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }}\n      open={props.snackBar.isOpenError}\n      autoHideDuration={5000}\n      TransitionComponent={props.snackBar.Transition}\n      onClose={() =>\n        props.setSnackBarStatus({\n          ...props.snackBar,\n          isOpenError: false\n        })\n      }\n    >\n      <MySnackbarContentWrapper\n        variant={props.variant}\n        message={props.massage}\n      />\n    </Snackbar>\n  );\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    snackBar: state.snackBar\n  };\n};\nconst mapDispatchToProps = {\n  setSnackBarStatus\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBar);\n","import { MaterialUiPickersDate } from '@material-ui/pickers';\nimport MaterialTable from 'material-table';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Breakpoint } from 'react-socks';\nimport { AppState, ISnackBar, Row } from '../redux/@types/state-interfaces';\nimport { SetSnackBarStatus } from '../redux/@types/types';\nimport {\n  startAddExpense,\n  startEditExpense,\n  startRemoveExpense,\n  startSetExpenses\n} from '../redux/actions/expensesActions';\nimport { setSnackBarStatus } from '../redux/actions/snackBarActions';\nimport { whichErrorMassageToDisplay } from './ExpenseFormFnc';\nimport Amount from './FormComponents/AmountComponent';\nimport DateComponent from './FormComponents/DateComponent';\nimport Description from './FormComponents/DescriptionComponent';\nimport Note from './FormComponents/NoteComponent';\nimport MobileExpenses from './mobileExpenses';\nimport ErrorSnackBar from './SnackBars/errorBar';\nexport interface IProps {\n  expenses: Row[];\n  startEditExpense: (\n    id: string,\n    update: {\n      id?: string;\n      description?: string;\n      amount?: number;\n      createdAt?: string;\n      note?: string;\n    }\n  ) => void;\n  startRemoveExpense: (id: string) => void;\n  startSetExpenses: () => void;\n  startAddExpense: (expenseData: {\n    description: string;\n    note?: string;\n    amount: number;\n    createdAt?: string;\n  }) => void;\n  setSnackBarStatus: (snackBarStatus: ISnackBar) => SetSnackBarStatus;\n}\n\nexport const ExpenseList: React.FC<IProps> = props => {\n  const [selectedRow, SetSelectedRow] = React.useState();\n  const [massage, SetMassage] = React.useState();\n  return (\n    <div>\n      <Breakpoint medium up>\n        <MaterialTable\n          title='Expenses List'\n          columns={[\n            {\n              title: 'Description',\n              field: 'description',\n              cellStyle: {\n                wordBreak: 'break-word',\n                wordWrap: 'break-word'\n              },\n              editComponent: props => (\n                <Description\n                  description={props.value}\n                  onDescriptionChange={e => {\n                    props.onChange(e.target.value);\n                  }}\n                />\n              )\n            },\n            {\n              title: 'Amount',\n              field: 'amount',\n              editComponent: props => (\n                <Amount\n                  amount={props.value}\n                  onAmountChange={e => {\n                    const amount = e.target.value;\n                    if (amount.match(/^\\d{1,}(\\.\\d{0,2})?$/) || amount === '') {\n                      props.onChange(amount);\n                    }\n                  }}\n                />\n              )\n            },\n            {\n              title: 'CreatedAt',\n              field: 'createdAt',\n              editComponent: props => (\n                <DateComponent\n                  createdAt={props.value}\n                  onDateChange={(createdAt: MaterialUiPickersDate) => {\n                    if (createdAt) {\n                      props.onChange(createdAt.toDateString());\n                    }\n                  }}\n                />\n              )\n            },\n\n            {\n              title: 'Note',\n              field: 'note',\n              editComponent: props => (\n                <Note\n                  note={props.value}\n                  onNoteChange={e => {\n                    props.onChange(e.target.value);\n                  }}\n                />\n              ),\n              cellStyle: {\n                wordBreak: 'break-word',\n                wordWrap: 'break-word',\n                maxWidth: '220px'\n              }\n            }\n          ]}\n          data={props.expenses}\n          onRowClick={(e, selectedRow) => SetSelectedRow(selectedRow)}\n          options={{\n            rowStyle: rowData => ({\n              backgroundColor:\n                selectedRow && selectedRow.tableData.id === rowData.tableData.id\n                  ? '#EEE'\n                  : '#FFF'\n            })\n          }}\n          editable={{\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  if (oldData && newData.description && newData.amount) {\n                    if (oldData.id)\n                      props.startEditExpense(oldData.id, {\n                        description: newData.description,\n                        amount: newData.amount,\n                        createdAt: newData.createdAt,\n                        note: newData.note\n                      });\n                  } else {\n                    SetMassage(\n                      whichErrorMassageToDisplay(\n                        newData.description,\n                        newData.amount\n                      )\n                    );\n                    props.setSnackBarStatus({\n                      isOpenAddExpense: false,\n                      isOpenError: true\n                    });\n                    reject('Invalid input.');\n                  }\n                  resolve();\n                }, 2000);\n              }),\n\n            onRowAdd: newData =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  if (newData.description && newData.amount) {\n                    props.startAddExpense({\n                      description: newData.description,\n                      note: newData.note,\n                      amount: newData.amount,\n                      createdAt: newData.createdAt\n                    });\n                    props.setSnackBarStatus({\n                      isOpenAddExpense: true,\n                      isOpenError: false\n                    });\n                    resolve();\n                  } else {\n                    SetMassage(\n                      whichErrorMassageToDisplay(\n                        newData.description,\n                        newData.amount\n                      )\n                    );\n                    props.setSnackBarStatus({\n                      isOpenAddExpense: false,\n                      isOpenError: true\n                    });\n                    reject('Invalid input.');\n                  }\n                }, 2000);\n              }),\n            onRowDelete: oldData =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  if (oldData.id) props.startRemoveExpense(oldData.id);\n                  resolve();\n                }, 2000);\n              })\n          }}\n        />\n        <ErrorSnackBar variant='error' massage={massage} />\n      </Breakpoint>\n      <Breakpoint small down>\n        <MobileExpenses />\n      </Breakpoint>\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  startEditExpense,\n  startRemoveExpense,\n  startSetExpenses,\n  startAddExpense,\n  setSnackBarStatus\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    expenses: state.expenses\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseList);\n","import Snackbar from '@material-ui/core/Snackbar';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../redux/@types/state-interfaces';\nimport { setSnackBarStatus } from '../../redux/actions/snackBarActions';\nimport MySnackbarContentWrapper from './snackBarContentWrapper';\nimport * as snackBarConfigures from './snackBarsConfigures';\n\nconst SnackBarAddExpense: React.FC<snackBarConfigures.IProps> = props => {\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }}\n      open={props.snackBar.isOpenAddExpense}\n      autoHideDuration={5000}\n      TransitionComponent={props.snackBar.Transition}\n      onClose={() =>\n        props.setSnackBarStatus({\n          ...props.snackBar,\n          isOpenAddExpense: false\n        })\n      }\n    >\n      <MySnackbarContentWrapper\n        variant={props.variant}\n        message={props.massage}\n      />\n    </Snackbar>\n  );\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    snackBar: state.snackBar\n  };\n};\nconst mapDispatchToProps = {\n  setSnackBarStatus\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SnackBarAddExpense);\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { BreakpointProvider } from 'react-socks';\nimport { AppState } from '../redux/@types/state-interfaces';\nimport { startSetExpenses } from '../redux/actions/expensesActions';\nimport ExpenseList from './expenseTable';\nimport AddExpenseSnackBar from './SnackBars/AddExpenseBar';\ninterface IProps {\n  startSetExpenses: () => void;\n  isMounted: boolean;\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginTop: theme.spacing(25)\n    }\n  })\n);\n\nconst ExpenseDashboardPage: React.FC<IProps> = props => {\n  React.useEffect(() => {\n    new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 2000);\n    }).then(() => {\n      SetIsMounted(true);\n    }); // eslint-disable-next-line\n  }, []);\n\n  const [isMounted, SetIsMounted] = React.useState(false);\n  const classes = useStyles();\n  return (\n    <div>\n      {isMounted ? (\n        <div>\n          <BreakpointProvider>\n            {' '}\n            <ExpenseList />\n            <AddExpenseSnackBar\n              variant='success'\n              massage='Expense added sucessesfuly!'\n            />\n          </BreakpointProvider>\n        </div>\n      ) : (\n        <div className={classes.root}>\n          <CircularProgress size={60} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  startSetExpenses\n};\nconst mapStateToProps = (state: AppState) => {\n  return {\n    expenses: state.expenses,\n    snackBar: state.snackBar\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExpenseDashboardPage);\n","import Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport firebase from 'firebase';\nimport React from 'react';\nimport { history } from '../../routers/AppRouter';\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © Yakir Ben Hillel 2019.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [firstName, setFirstName] = React.useState('');\n  const [lastName, setLastName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const whichMessageToShow = (errorCode: string) => {\n    switch (errorCode) {\n      case 'auth/invalid-email':\n        setErrorMessage('The Email address is invalid.');\n        break;\n      case 'auth/weak-password':\n        setErrorMessage('Password should be at least 6 characters.');\n        break;\n    }\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(error => {\n        console.log(error.code);\n        console.log(error.message);\n        whichMessageToShow(error.code);\n      });\n    history.push('/');\n  };\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete='fname'\n                value={firstName}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setFirstName(e.target.value)\n                }\n                name='firstName'\n                variant='outlined'\n                required\n                fullWidth\n                id='firstName'\n                label='First Name'\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant='outlined'\n                required\n                fullWidth\n                id='lastName'\n                value={lastName}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setLastName(e.target.value)\n                }\n                label='Last Name'\n                name='lastName'\n                autoComplete='lname'\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant='outlined'\n                required\n                fullWidth\n                id='email'\n                value={email}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setEmail(e.target.value)\n                }\n                label='Email Address'\n                name='email'\n                autoComplete='email'\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant='outlined'\n                required\n                fullWidth\n                name='password'\n                label='Password'\n                value={password}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setPassword(e.target.value)\n                }\n                type='password'\n                id='password'\n                autoComplete='current-password'\n              />\n            </Grid>\n          </Grid>\n          {errorMessage && (\n            <Typography color='secondary'>{errorMessage}</Typography>\n          )}\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify='flex-end'>\n            <Grid item>\n              <Link href='/' variant='body2'>\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n  buttonIcon: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    margin: '8px 0 8px 8px',\n    width: '20px',\n    height: '20px',\n    boxSizing: 'border-box'\n  },\n  buttonText: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    padding: '0 24px'\n  }\n}));\nconst GoogleSignInButton = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <span className={classes.buttonIcon}>\n        <svg viewBox='0 0 366 372' xmlns='http://www.w3.org/2000/svg'>\n          <path\n            d='M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z'\n            id='Shape'\n            fill='#EA4335'\n          />\n          <path\n            d='M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z'\n            id='Shape'\n            fill='#FBBC05'\n          />\n          <path\n            d='M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z'\n            id='Shape'\n            fill='#4285F4'\n          />\n          <path\n            d='M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z'\n            fill='#34A853'\n          />\n        </svg>\n      </span>\n      <span className={classes.buttonText}>Sign in with Google</span>\n    </div>\n  );\n};\nexport default GoogleSignInButton;\n","import Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport firebase from 'firebase';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startLogin } from '../../redux/actions/auth';\nimport GoogleSignInButton from './buttons/googleSignIn';\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      Yakir Ben Hillel 2019\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  googleButton: {\n    height: '40px',\n    borderWidth: '0',\n    backgroundColor: 'white',\n    color: '#737373',\n    borderRadius: '5px',\n    whiteSpace: 'nowrap',\n    boxShadow: ' 1px 1px 0px 1px rgba(0,0,0,0.05)',\n    transitionProperty: 'background-color,box-shadow',\n    transitionTimingFunction: 'ease-in-out',\n    transitionDuration: '150ms',\n    marginBottom: theme.spacing(1),\n    fontSize: '14px',\n    fontWeight: 'bold'\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\ninterface IProps {\n  startLogin: () => Promise<firebase.auth.UserCredential>;\n}\nconst Login: React.FC<IProps> = ({ startLogin }) => {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const whichMessageToShow = (errorCode: string) => {\n    switch (errorCode) {\n      case 'auth/invalid-email':\n        setErrorMessage('The email address is invalid.');\n        break;\n      case 'auth/user-not-found':\n        setErrorMessage('The user does not exist, please Sign Up to proceed.');\n        break;\n      case 'auth/wrong-password':\n        setErrorMessage(\n          'The password is invalid or the user signed in with Google.'\n        );\n        break;\n    }\n  };\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(error => {\n        whichMessageToShow(error.code);\n      });\n  };\n  const classes = useStyles();\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          Sign in\n        </Typography>\n        <form onSubmit={onSubmit}>\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='email'\n            value={email}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setEmail(e.target.value)\n            }\n            label='Email Address'\n            name='email'\n            autoComplete='email'\n          />\n          <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            label='Password'\n            type='password'\n            id='password'\n            value={password}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setPassword(e.target.value)\n            }\n            autoComplete='current-password'\n          />\n          <FormControlLabel\n            control={<Checkbox value='remember' color='primary' />}\n            label='Remember me'\n          />\n          {errorMessage && (\n            <Typography color='secondary'>{errorMessage}</Typography>\n          )}\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n        <Button className={classes.googleButton} onClick={startLogin} fullWidth>\n          <GoogleSignInButton />\n        </Button>\n        <Grid container>\n          <Grid item>\n            <Link href='/signup' variant='body2'>\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\nconst mapDispatchToProps = {\n  startLogin\n};\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage: React.FC = () => (\n  <div>\n    404 - <Link to='/'>Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import clsx from 'clsx';\nimport { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport Bar from '../components/AppBar';\nimport useStyles from '../components/AppBarComponents/useStyles';\nimport ExpenseDashboardPage from '../components/ExpenseDashboardPage';\nimport Signup from '../components/authPages/signup';\nimport Login from '../components/authPages/loginPage';\nimport NotFoundPage from '../components/NotFoundPage';\nimport { AppState } from '../redux/@types/state-interfaces';\nexport const history = createBrowserHistory();\ninterface IProps {\n  isAuthenticated: boolean;\n}\nconst AppRouter: React.FC<IProps> = props => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n\n  return (\n    <Router history={history}>\n      <div>\n        {props.isAuthenticated && <Bar open={open} setOpen={setOpen} />}\n        <main\n          className={clsx(classes.content, classes.grow, {\n            [classes.contentShift]: open\n          })}\n        >\n          {props.isAuthenticated ? (\n            <Switch>\n              <Route exact path='/' component={ExpenseDashboardPage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          ) : (\n            <Switch>\n              <Route exact path='/' component={Login} />\n              <Route path='/signup' component={Signup} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          )}\n        </main>\n      </div>{' '}\n    </Router>\n  );\n};\n\nconst MapStateToProps = (state: AppState) => ({\n  isAuthenticated: !!state.authentication.uid\n});\nexport default connect(MapStateToProps)(AppRouter);\n","import { IExpense } from '../@types/state-interfaces';\nimport { ExpenseActionTypes } from '../@types/types';\n\nconst expensesReducerDefaultState: IExpense[] = [];\n\nconst expensesReducer = (\n  state = expensesReducerDefaultState,\n  action: ExpenseActionTypes\n) => {\n  switch (action.type) {\n    case 'ADD_EXPENSE': {\n      if (action.place !== undefined) {\n        //in case of edit\n        const arrayBeforeAddedExpense = state.slice(0, action.place);\n        const arrayAfterAddedExpense = state.slice(action.place);\n        return [\n          ...arrayBeforeAddedExpense,\n          action.expense,\n          ...arrayAfterAddedExpense\n        ];\n      } else return [...state, action.expense];\n    }\n    case 'REMOVE_EXPENSE':\n      return state.filter(({ id }) => id !== action.id);\n    case 'EDIT_EXPENSE':\n      return state.map(expense => {\n        if (expense.id === action.id) {\n          return {\n            ...expense,\n            ...action.updates\n          };\n        } else {\n          return expense;\n        }\n      });\n    case 'SET_EXPENSES':\n      return [...action.expenses];\n    default:\n      return state;\n  }\n};\nexport default expensesReducer;\n","import { IFilter } from '../@types/state-interfaces';\nimport { FilterActionTypes } from '../@types/types';\n\nconst filtersReducerDefaultState: IFilter = {\n  text: '',\n  sortBy: 'date',\n  startDate: undefined,\n  endDate: undefined\n};\n\nconst filtersReducer = (\n  state = filtersReducerDefaultState,\n  action: FilterActionTypes\n) => {\n  switch (action.type) {\n    case 'SET_TEXT_FILTER':\n      return {\n        ...state,\n        text: action.text\n      };\n    case 'SORT_BY_AMOUNT':\n      return {\n        ...state,\n        sortBy: 'amount'\n      };\n    case 'SORT_BY_DATE':\n      return {\n        ...state,\n        sortBy: 'date'\n      };\n    case 'SET_START_DATE':\n      return {\n        ...state,\n        startDate: action.startDate\n      };\n    case 'SET_END_DATE':\n      return {\n        ...state,\n        endDate: action.endDate\n      };\n    default:\n      return state;\n  }\n};\nexport default filtersReducer;\n","import Fade from '@material-ui/core/Fade';\nimport { ISnackBar } from '../@types/state-interfaces';\nimport { SnackBarActionTypes } from '../@types/types';\nconst snackBarReducerDefaultState: ISnackBar = {\n  isOpenAddExpense:false,\n  isOpenError:false,\n  Transition: Fade\n};\n\nconst snackBarReducer = (\n  state = snackBarReducerDefaultState,\n  action: SnackBarActionTypes\n) => {\n  switch (action.type) {\n    case 'SET_SNACK_BAR_STATUS':\n      return {\n        ...state,\n        ...action.snackBarStatus\n      };\n    default:\n      return state;\n  }\n};\nexport default snackBarReducer;\n","import { AuthActionTypes } from '../@types/types';\n\nexport default (state = {}, action: AuthActionTypes) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        uid: action.uid\n      };\n    case 'LOGOUT':\n      return {};\n    default:\n      return state;\n  }\n};\n","// @ts-nocheck\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store/configureStore';\nimport { firebase, } from './database/firebase';\nimport { login, logout } from './redux/actions/auth';\nimport { startSetExpenses } from './redux/actions/expensesActions';\nimport 'normalize.css/normalize.css';\nconst store = configureStore();\nconst Application = () => (\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>\n);\nlet hasRendered = false;\nconst renderApp = () => {\n  if (!hasRendered) {\n    ReactDOM.render(<Application />, document.getElementById('root'));\n    hasRendered = true;\n  }\n};\nfirebase.auth().onAuthStateChanged(async user => {\n  if (user) {\n    store.dispatch(login(user.uid));\n    await store.dispatch(startSetExpenses());\n    renderApp();\n  } else {\n    store.dispatch(logout());\n    renderApp();\n  }\n});\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport expensesReducer from '../reducers/expensesReduce';\nimport filtersReducer from '../reducers/filtersReducer';\nimport snackBarReducer from '../reducers/snackBarReduce';\nimport authReducer from '../reducers/authReducer';\nimport thunk from 'redux-thunk';\n// Store creation\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      expenses: expensesReducer,\n      filters: filtersReducer,\n      snackBar: snackBarReducer,\n      authentication: authReducer\n    }),\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n  return store;\n};\n"],"sourceRoot":""}